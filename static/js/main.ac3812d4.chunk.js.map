{"version":3,"sources":["ScreenShots/Iphone/01_login.png","ScreenShots/Iphone/06_PracticeScreen.png","ScreenShots/Iphone/07_PracticeScreenResults.png","ScreenShots/Iphone/11_GameSelection.png","ScreenShots/Iphone/02_GameDescription.png","ScreenShots/Iphone/08_Records.png","ScreenShots/Iphone/09_Profile.png","ScreenShots/Iphone/10_DiscSelection.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","HomeStyle","styled","div","App","className","href","src","require","alt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mLAAAA,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,+C,gBCA3CD,EAAOC,QAAU,IAA0B,sD,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,gD,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,8C,ygDCI3C,IAAMC,E,KAAYC,EAAOC,IAAV,KAuQAC,MAxKf,WACE,OACE,oCACE,kBAACH,EAAD,KACE,yBAAKI,UAAU,UAEb,0CAIA,6BACE,uBAAGC,KAAK,IAAR,gCAOJ,yBAAKD,UAAU,kBACb,oFAIA,yBAAKA,UAAU,QAEb,yBACEE,IAAKC,EAAQ,IACbC,IAAI,cAGN,8zBASJ,yBAAKJ,UAAU,mBACb,gDAIA,yBAAKA,UAAU,SAEb,yBACEE,IAAKC,EAAQ,IACbC,IAAI,qBAGN,2YAIA,yBACEF,IAAKC,EAAQ,IACbC,IAAI,uBAMV,yBAAKJ,UAAU,mBACb,8CAIA,yBAAKA,UAAU,SAEb,yBACEE,IAAKC,EAAQ,IACbC,IAAI,qBAGN,+bAIA,yBACEF,IAAKC,EAAQ,IACbC,IAAI,uBAOV,yBAAKJ,UAAU,mBACb,wCAIA,yBAAKA,UAAU,SAEb,gZAIA,yBACEE,IAAKC,EAAQ,IACbC,IAAI,uBAOV,yBAAKJ,UAAU,mBACb,oDAIA,yBAAKA,UAAU,SAEb,yBACEE,IAAKC,EAAQ,IACbC,IAAI,qBAGN,ucAIA,yBACEF,IAAKC,EAAQ,IACbC,IAAI,uBAMV,yBAAKJ,UAAU,UAEb,yBAAKA,UAAU,OAEb,2DAIA,6BACE,uBAAGC,KAAK,IAAR,gCAOJ,6BAEA,yBAAKD,UAAU,OAEb,uDAIA,gGCnPQK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ac3812d4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/01_login.a491ad51.png\";","module.exports = __webpack_public_path__ + \"static/media/06_PracticeScreen.afd0cd5b.png\";","module.exports = __webpack_public_path__ + \"static/media/07_PracticeScreenResults.cf6ed3ae.png\";","module.exports = __webpack_public_path__ + \"static/media/11_GameSelection.22388cca.png\";","module.exports = __webpack_public_path__ + \"static/media/02_GameDescription.57cbf77b.png\";","module.exports = __webpack_public_path__ + \"static/media/08_Records.b32d6a9e.png\";","module.exports = __webpack_public_path__ + \"static/media/09_Profile.f2a75470.png\";","module.exports = __webpack_public_path__ + \"static/media/10_DiscSelection.74e73c0b.png\";","import React from 'react';\nimport './App.css';\nimport styled from \"styled-components\"\n\nconst HomeStyle = styled.div`\nfont-family: 'American Typewriter';\ncolor: #e6e6e6;\nbackground-color: #6f263d;\na{\n  background-color: #440d16;\n  padding: 15px;\n  color: white;\n  border-radius: 25px;\n}\np{\n  width: 60%;\n  margin: auto\n}\nh1{\n  text-align: center;\n}\nimg{\n  height: 350px;\n  margin-bottom: 10px;\n}\n.header{\n  text-align: center;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  background-color: #236192;\n}\n.footer{\n  text-align: center;\n  background-color: #236192;\n  padding-bottom: 10px;\n}\n.row{\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n}\nhr{\n  width: 81%\n}\n.container-main{\n  background-color: #4f131f;\n  padding-top: 10px;\n}\n.main{\n  display: flex;\n  width: 80%;\n  margin: auto\n}\n.container-body1{\n  background-color: #6f263d;\n}\n.body1{\n  display: flex;\n  width: 80%;\n  margin: auto\n}\n.container-body2{\n  background-color: #4f131f;\n  padding-top: 10px;\n}\n.body2{\n  display: flex;\n  width: 80%;\n  margin: auto\n}\n.container-body3{\n  background-color: #6f263d;\n}\n.body3{\n  display: flex;\n  width: 80%;\n  margin: auto\n}\n.container-body4{\n  background-color: #4f131f;\n  padding-top: 10px;\n}\n.body4{\n  display: flex;\n  width: 80%;\n  margin: auto\n}\n.container-body5{\n  background-color: #6f263d;\n}\n.body5{\n  display: flex;\n  width: 80%;\n  margin: auto\n}\n`\n\n\nfunction App() {\n  return (\n    <>\n      <HomeStyle>\n        <div className='header'>\n\n          <h1>\n            NAW Putter\n          </h1>\n\n          <div>\n            <a href=''>\n              DOWNLOAD ON THE APP STORE!\n            </a>\n          </div>\n\n        </div>\n\n        <div className='container-main'>\n          <h1>\n            Track Your Putting Practices and Play Putting Games!\n          </h1>\n\n          <div className='main'>\n\n            <img\n              src={require('./ScreenShots/Iphone/01_login.png')}\n              alt='Home Page'\n            />\n\n            <p>\n              Have you been spending hours practicing your disc golf putt, only to be unsure that you're actually improving? Have you been improving, but want to see where you can improve more? Tired of simply throwing your disc at the chains, and want some games to spice up your practice session? Well then NAW Putter is for you! NAW Putter tracks your makes and misses and organizes it into helpful and interesting statistics. NAW Putter keeps track of your daily practice session, as well as your previous 10 days of practices, so you can keep track of your improvement over time. Want to know how many putts you've made since downloading the app? We got you covered there as well, can you reach 99% accuracy? Games offer you either a more interesting way to train, or a fun break from your regular routine!\n            </p>\n\n\n          </div>\n        </div>\n\n\n        <div className='container-body1'>\n          <h1>\n            Custom Practice!\n          </h1>\n\n          <div className='body1'>\n\n            <img\n              src={require('./ScreenShots/Iphone/06_PracticeScreen.png')}\n              alt='Blackjack Screen'\n            />\n\n            <p>\n              Create your own practice session, by choosing the distance and how many you make. Simple as that. Our app will do the rest, keeping track of your daily stats, the stats from your last 10 practice sessions, and your all time stats. Easily compare these stats as soon as you're done with your session either from our end screen, or by heading to the records section!\n            </p>\n\n            <img\n              src={require('./ScreenShots/Iphone/07_PracticeScreenResults.png')}\n              alt='Blackjack Screen'\n            />\n\n          </div>\n        </div>\n\n        <div className='container-body2'>\n          <h1>\n            Putting Games!\n          </h1>\n\n          <div className='body2'>\n\n            <img\n              src={require('./ScreenShots/Iphone/11_GameSelection.png')}\n              alt='Blackjack Screen'\n            />\n\n            <p>\n              Want to try a new practice game? Or do you want to mix it up with a wacky fun disc golf game? Select from several disc golf putting games, some are great for training, others are fun to compete against your friends with! Worried a game may mess up your stats? Simply read our game descriptions, most \"training games\" will adjust your stats, our \"just for fun\" games will simply adjust your \"just for fun\" game stats!\n            </p>\n\n            <img\n              src={require('./ScreenShots/Iphone/02_GameDescription.png')}\n              alt='Blackjack Screen'\n            />\n\n          </div>\n        </div>\n\n\n        <div className='container-body3'>\n          <h1>\n            Records!\n          </h1>\n\n          <div className='body3'>\n\n            <p>\n              Want to make sure you're improving? Simply stop by the records page and compare your highlights. Compare your all time records to your daily and last 10 days of practice. Check up on your high scores for our disc golf games, and then try to beat your top score! Have a stat that you'd like included? Simply email us with your suggestion and we'll try to incorporate it!\n            </p>\n\n            <img\n              src={require('./ScreenShots/Iphone/08_Records.png')}\n              alt='Blackjack Screen'\n            />\n\n          </div>\n        </div>\n\n\n        <div className='container-body4'>\n          <h1>\n            Update Your Profile!\n          </h1>\n\n          <div className='body4'>\n\n            <img\n              src={require('./ScreenShots/Iphone/09_Profile.png')}\n              alt='Blackjack Screen'\n            />\n\n            <p>\n              Update your profile to include your favorite discs, your bagsize (how many discs you usually putt with). We use this information to create more stat updates as well as eventually include a breakdown of your putting stats based on which disc you're using. Simply select the disc you're using and we'll keep track of all your stats associated with that disc (in a future update, we're hoping to offer a compare discs section).\n          </p>\n\n            <img\n              src={require('./ScreenShots/Iphone/10_DiscSelection.png')}\n              alt='Blackjack Screen'\n            />\n\n          </div>\n        </div>\n\n        <div className='footer'>\n\n          <div className='row'>\n\n            <h1>\n              Blackjack and Card Counting\n            </h1>\n\n            <div>\n              <a href=''>\n                DOWNLOAD ON THE APP STORE!\n              </a>\n            </div>\n\n          </div>\n\n          <hr />\n\n          <div className='row'>\n\n            <p>\n              nawdevelopment@gmail.com\n            </p>\n\n            <p>\n              Built in Colorado | Copyright Â© 2020 NAW Development LLC.\n            </p>\n\n          </div>\n\n        </div>\n      </HomeStyle>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}